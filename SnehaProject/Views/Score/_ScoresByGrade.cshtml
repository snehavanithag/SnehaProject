@model SnehaProject.ViewModel.ScoreViewModel

@{
    var GradeID = ViewBag.GradeID;
    Model.AddScore.GradeID = GradeID;

    var GradeYear = ViewBag.GradeYear.ToString().Split('-');
    var StartYear = GradeYear[0];
    var EndYear = GradeYear[1];
    var StartMonth = ViewBag.SchoolStartMonth;
    var EndMonth = ViewBag.SchoolEndMonth;
}
<div>
    <table id="score" class="display" style="width:100%">
        <thead>
            <tr>
                <th>Subject Name</th>
                <th>Score</th>
                <th>Test Date</th>
                <th>Term Name</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ScoreList)
            {
                <tr id="@item.ScoreID">
                    <td class="SubjectName">@item.SubjectName</td>
                    <td class="Score">@item.Score</td>
                    <td class="TestDate">@item.TestDate.ToShortDateString()</td>
                    <td class="TermName">@item.TermName</td>
                    <td><a class="editor-edit" style="cursor:pointer" ScoreID="@item.ScoreID"><i class="fa fa-pencil" /></a></td>
                    <td><a class="editor-delete" style="cursor:pointer" ScoreID="@item.ScoreID"><i class="fa fa-trash" /></a></td>
                </tr>

            }
        </tbody>
    </table>



</div>

<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <form class="form-horizontal">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="exampleModalLabel">Add Test Score</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="SubjectID" class="col-md-2 control-label">Subject</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => x.AddScore.SubjectID, new SelectList(Model.SubjectList, "SubjectID", "SubjectName"), "Select Subject", new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.AddScore.SubjectID, "", new { @class = "text-danger", id="SubjectError" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Score" class="col-md-2 control-label">Score</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.AddScore.Score, new { @class = "form-control", placeholder = "Enter Score" })
                            @Html.ValidationMessageFor(x => x.AddScore.Score, "", new { @class = "text-danger", id="ScoreError" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="TestDate" class="col-md-2 control-label">Test Date</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.AddScore.TestDate, "{0:MM/dd/yyyy}", new { @class = "form-control", placeholder = "Select Date" })
                            @Html.ValidationMessageFor(x => x.AddScore.TestDate, "", new { @class = "text-danger",id="TestDateError" })
                            @Html.HiddenFor(x => x.AddScore.GradeID)
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                    <input type="button" class="btn btn-info" value="Submit" id="btnScoreSubmit" />
                </div>
            </div>
        </form>
    </div>
</div>
<div id="UpsertView">
</div>
@Shared.ShowModal("Do You Want To Delete This Score?")
<input type="hidden" id="hdnScoreID" />
<script type="text/javascript">

    var table;


    $("document").ready(function () {
       // $("#score").DataTable();
        

           var groupColumn = 3
           table = $('#score').DataTable({
            "columnDefs": [
                {
                    "visible": false, "targets": groupColumn,
                    //"orderable": false, "targets": [0, 1, 2]
                  //  "orderable": true, "targets": groupColumn
                }
            ],
            "order": [[groupColumn, 'asc']],
            "orderFixed": [groupColumn, 'asc'],
            //"displayLength": 10,
           // "ordering": false,
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;

                api.column(groupColumn, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="5">' + group + '</td></tr>'
                        );

                        last = group;
                    }
                });
            }
         });



        $("<a  class='btn btn-info' data-toggle='modal' data-target='#createModal'>Create New</a><span>&nbsp;&nbsp;&nbsp;</span>").prependTo(".dataTables_filter");
        //$("<a  class='btn btn-info' id='btnScoreCreate'>Create New</a><span>&nbsp;&nbsp;&nbsp;</span>").prependTo(".dataTables_filter");

        var StartDate =  "@StartMonth" + "/01/" + + "@StartYear" ;
        var EndDate = "@EndMonth" + "/01/" + "@EndYear";
        var GradeID = "@GradeID";


        $("#AddScore_TestDate").datepicker({
            changeMonth: true,
            changeYear: true,
            minDate: new Date(StartDate),
            maxDate: new Date(EndDate)

        });


        $(".editor-edit").on("click", function () {

            var UpdateScoreViewModel = {};

            var SubjectScore = {};
            SubjectScore.SubjectName = $(this).parent().parent("tr").children("td.SubjectName").text();
            SubjectScore.Score = $(this).parent().parent("tr").children("td.Score").text();
            SubjectScore.TestDate = $(this).parent().parent("tr").children("td.TestDate").text();
            SubjectScore.ScoreID = $(this).attr("ScoreID");
            SubjectScore.GradeID = GradeID;

            UpdateScoreViewModel.SubjectScore = SubjectScore;
            UpdateScoreViewModel.GradeStartDate = StartDate;
            UpdateScoreViewModel.GradeEndDate = EndDate;

            $("#UpsertView").load("/Score/UpdateScore", { UpdateScoreViewModel: UpdateScoreViewModel });
        });

       
        $(".editor-delete").on("click", function () {
            var ScoreID = $(this).attr("ScoreID");
            $("#hdnScoreID").val(ScoreID);
            $("#deleteModal").modal('show');
        });

        $("#btnDelete").on("click", function () {
            var ScoreID = $("#hdnScoreID").val();

            $.ajax({
                url: "/Score/DeleteScore",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: '{"ScoreID":' + ScoreID + '}',
                success: function (data) {
                    if (data.Success) {
                        $("#deleteModal").modal('hide');
                        $("table tbody tr#" + ScoreID).remove();
                    }
                }


            });

        });
        $("#btnScoreSubmit").on("click", function () {
            var SubjectName = $("#AddScore_SubjectID option:selected").text();
            var SubjectScore = {};
            alert(SubjectName);
            SubjectScore.SubjectID = $("#AddScore_SubjectID").val();
            SubjectScore.ScoreID = $("#AddScore_ScoreID").val();
            SubjectScore.Score = $("#AddScore_Score").val();
            SubjectScore.TestDate = $("#AddScore_TestDate").val();
            SubjectScore.GradeID = GradeID;

            $.ajax({
                url: "/Score/Create",
                type: "POST",
                dataType: "JSON",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(SubjectScore),
                success: function (data) {
                  if (!data.errors) {
                        $("#createModal").modal('hide');
                        var tr = '<tr id=' + data.Score.ScoreID + '>';
                        tr = tr + '<td class="SubjectName">' + SubjectName + '</td>';
                        tr = tr + '<td class="Score">' + SubjectScore.Score + '</td>';
                        tr = tr + '<td class="TestDate">' + SubjectScore.TestDate + '</td>';
                        tr = tr + '<td class="TermName">' + data.Score.TermName + '</td>';
                        tr = tr + '<td><a class="editor-edit" style="cursor:pointer" ScoreID=' + data.ScoreID + '><i class="fa fa-pencil" /></a></td>';
                        tr = tr + '<td><a class="editor-delete" style="cursor:pointer" ScoreID=' + data.ScoreID + '><i class="fa fa-trash" /></a></td>';

                        const row = $(tr);

                        table.row.add(row[0]).draw();
    
                    }
                    else {
                        displayValidationErrors(data.errorList);
                    }
                }


            });
        });
        function displayValidationErrors(errors) {
            $.each(errors, function (idx, validationError) {
                //alert(validationError.PropertyName);
                //alert(validationError.ErrorList[0]);
                $("span[data-valmsg-for='" + "AddScore." + validationError.PropertyName + "']").text(validationError.ErrorList[0]);

            });
        }
    });
</script>

